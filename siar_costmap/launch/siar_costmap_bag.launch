<?xml version="1.0"?>
<launch>

  # Bag filename
  <arg name="bag_file" />
  
  # Starting second into the bag file
  <arg name="start" default="0" />
  
  <arg name="tilt_compensate" default="false"/>
  <arg name="consider_sign" default="true"/>
  <arg name="roi_x" default="5"/>
  <arg name="roi_y" default="5"/>
  <arg name="roi_w" default="310"/>
  <arg name="roi_h" default="230"/>
  <arg name="roi_w2" default="630"/>
  <arg name="roi_h2" default="470"/>
  
  <arg name="camera_1" default="/front_left"/>
  <arg name="camera_2" default="/back_left"/>
  <arg name="camera_3" default="/front_right"/>
  <arg name="camera_4" default="/back_right"/>
  <arg name="camera_5" default="/front"/>
  <arg name="camera_6" default="/back"/>
  
  <arg name="range_min" default="0.35"/>
  <arg name="range_max" default="5.0"/>
  
  # Use simulation time fro TFs
  <param name="use_sim_time" value="true" />

  # Bag file
  <node name="bag_player" type="play" pkg="rosbag" output="screen" args="$(arg bag_file) --clock -s $(arg start)" />
  
  # Camera TFs
<!--   <include file="$(find bag_play)/launch/sensor_transform_siar.launch"/> -->
<!--   <include file="$(find bag_play)/launch/4_cam_double/4_cam_double.launch"> -->
<!--     <arg name="load_driver" value="false"/> -->
<!--   </include> -->
  
   # Uncompress images and depth
  <node name="republish_bd_img" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_1)/rgb/image_raw raw out:=/$(arg camera_1)/rgb/image_raw"/>
  <node name="republish_bd_depth" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/$(arg camera_1)/depth_registered/image_raw raw out:=/$(arg camera_1)/depth_registered/image_raw"/>
  <node name="republish_bd_img2" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_2)/rgb/image_raw raw out:=/$(arg camera_2)/rgb/image_raw"/>
  <node name="republish_bd_depth2" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/$(arg camera_2)/depth_registered/image_raw raw out:=/$(arg camera_2)/depth_registered/image_raw"/>
  <node name="republish_bd_img3" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_3)/rgb/image_raw raw out:=/$(arg camera_3)/rgb/image_raw"/>
  <node name="republish_bd_depth3" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/$(arg camera_3)/depth_registered/image_raw raw out:=/$(arg camera_3)/depth_registered/image_raw"/>
  <node name="republish_bd_img4" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_4)/rgb/image_raw raw out:=/$(arg camera_4)/rgb/image_raw"/>
  <node name="republish_bd_depth4" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/$(arg camera_4)/depth_registered/image_raw raw out:=/$(arg camera_4)/depth_registered/image_raw"/>
  <node name="republish_bd_img5" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_5)/rgb/image_raw raw out:=/$(arg camera_5)/rgb/image_raw"/>
  <node name="republish_bd_depth5" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/$(arg camera_5)/depth_registered/image_raw raw out:=/$(arg camera_5)/depth_registered/image_raw"/>
  <node name="republish_bd_img6" type="republish" pkg="image_transport" output="screen" args="compressed in:=/$(arg camera_6)/rgb/image_raw raw out:=/$(arg camera_6)/rgb/image_raw"/>
  <node name="republish_bd_depth6" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/$(arg camera_6)/depth_registered/image_raw raw out:=/$(arg camera_6)/depth_registered/image_raw"/>

  # Point cloud computation
  <node pkg="depth2cloud" type="depth2cloud_node" name="depth2cloud_front_down" >
    <remap from="depth" to="$(arg camera_1)/depth_registered/image_raw"/>                   # Topic for the camera depth
    <remap from="info" to="$(arg camera_1)/depth_registered/camera_info"/>                  # Topic for the camera info
    <remap from="cloud" to="$(arg camera_1)/point_cloud"/>                                                  # Topic name for output point cloud
    <param name="range_min" value = "$(arg range_min)"/>                                                                     # Min range in meters for point cloud generation
    <param name="range_max" value = "$(arg range_max)"/>                                                                     # Max range in meters for point cloud generation
    <param name="down_sampling" value = "1"/>                                                           # Camera down sampling factor. Values: 1, 2 or 4. The bigger the faster.
    <param name="roi_x" value="$(arg roi_x)"/>
    <param name="roi_y" value="$(arg roi_y)"/>
    <param name="roi_w" value="$(arg roi_w)"/>
    <param name="roi_h" value="$(arg roi_h)"/>
  </node>
  <node pkg="depth2cloud" type="depth2cloud_node" name="depth2cloud_back_down" >
    <remap from="depth" to="$(arg camera_2)/depth_registered/image_raw"/>                    # Topic for the camera depth
    <remap from="info" to="$(arg camera_2)/depth_registered/camera_info"/>                   # Topic for the camera info
    <remap from="cloud" to="$(arg camera_2)/point_cloud"/>                                                   # Topic name for output point cloud
    <param name="range_min" value = "$(arg range_min)"/>                                                                     # Min range in meters for point cloud generation
    <param name="range_max" value = "$(arg range_max)"/>                                                                     # Max range in meters for point cloud generation
    <param name="down_sampling" value = "1"/>                                                           # Camera down sampling factor. Values: 1, 2 or 4. The bigger the faster.
    <param name="roi_x" value="$(arg roi_x)"/>
    <param name="roi_y" value="$(arg roi_y)"/>
    <param name="roi_w" value="$(arg roi_w)"/>
    <param name="roi_h" value="$(arg roi_h)"/>
  </node>
  <node pkg="depth2cloud" type="depth2cloud_node" name="depth2cloud_front_down_2"  >
    <remap from="depth" to="$(arg camera_3)/depth_registered/image_raw"/>                    # Topic for the camera depth
    <remap from="info" to="$(arg camera_3)/depth_registered/camera_info"/>                   # Topic for the camera info
    <remap from="cloud" to="$(arg camera_3)/point_cloud"/>                                                   # Topic name for output point cloud
    <param name="range_min" value = "$(arg range_min)"/>                                                                     # Min range in meters for point cloud generation
    <param name="range_max" value = "$(arg range_max)"/>                                                                     # Max range in meters for point cloud generation
    <param name="roi_x" value="$(arg roi_x)"/>
    <param name="roi_y" value="$(arg roi_y)"/>
    
    <param name="roi_w" value="$(arg roi_w)"/>
    <param name="roi_h" value="$(arg roi_h)"/>
    <param name="down_sampling" value = "1"/>                                                           # Camera down sampling factor. Values: 1, 2 or 4. The bigger the faster.
  </node>
  <node pkg="depth2cloud" type="depth2cloud_node" name="depth2cloud_4" >
    <remap from="depth" to="$(arg camera_4)/depth_registered/image_raw"/>                    # Topic for the camera depth
    <remap from="info" to="$(arg camera_4)/depth_registered/camera_info"/>                   # Topic for the camera info
    <remap from="cloud" to="$(arg camera_4)/point_cloud"/>                                                   # Topic name for output point cloud
    <param name="range_min" value = "$(arg range_min)"/>                                                                     # Min range in meters for point cloud generation
    <param name="range_max" value = "$(arg range_max)"/>                                                                     # Max range in meters for point cloud generation
    <param name="roi_x" value="$(arg roi_x)"/>
    <param name="roi_y" value="$(arg roi_y)"/>
    <param name="roi_w" value="$(arg roi_w)"/>
    <param name="roi_h" value="$(arg roi_h)"/>
    <param name="down_sampling" value = "1"/>                                                           # Camera down sampling factor. Values: 1, 2 or 4. The bigger the faster.
  </node>
  <node pkg="depth2cloud" type="depth2cloud_node" name="depth2cloud_5" >
    <remap from="depth" to="$(arg camera_5)/depth_registered/image_raw"/>                    # Topic for the camera depth
    <remap from="info" to="$(arg camera_5)/depth_registered/camera_info"/>                   # Topic for the camera info
    <remap from="cloud" to="$(arg camera_5)/point_cloud"/>                                                   # Topic name for output point cloud
    <param name="range_min" value = "$(arg range_min)"/>                                                                     # Min range in meters for point cloud generation
    <param name="range_max" value = "$(arg range_max)"/>                                                                     # Max range in meters for point cloud generation
    <param name="roi_x" value="$(arg roi_x)"/>
    <param name="roi_y" value="$(arg roi_y)"/>
    <param name="roi_w" value="$(arg roi_w2)"/>
    <param name="roi_h" value="$(arg roi_h2)"/>
    <param name="down_sampling" value = "1"/>                                                           # Camera down sampling factor. Values: 1, 2 or 4. The bigger the faster.
  </node>
  <node pkg="depth2cloud" type="depth2cloud_node" name="depth2cloud_6" >
    <remap from="depth" to="$(arg camera_6)/depth_registered/image_raw"/>                    # Topic for the camera depth
    <remap from="info" to="$(arg camera_6)/depth_registered/camera_info"/>                   # Topic for the camera info
    <remap from="cloud" to="$(arg camera_6)/point_cloud"/>                                                   # Topic name for output point cloud
    <param name="range_min" value = "$(arg range_min)"/>                                                                     # Min range in meters for point cloud generation
    <param name="range_max" value = "$(arg range_max)"/>                                                                     # Max range in meters for point cloud generation
    <param name="roi_x" value="$(arg roi_x)"/>
    <param name="roi_y" value="$(arg roi_y)"/>
    <param name="roi_w" value="$(arg roi_w2)"/>
    <param name="roi_h" value="$(arg roi_h2)"/>
    <param name="down_sampling" value = "1"/>                                                           # Camera down sampling factor. Values: 1, 2 or 4. The bigger the faster.
  </node>
  <node pkg="siar_costmap" type="costmap_node" name="costmap_node" output="screen"> # launch-prefix="xterm -e gdb --args"> # 
    <remap from="cloud0" to="$(arg camera_1)/point_cloud"/>                 # Input cloud 0
    <remap from="cloud1" to="$(arg camera_2)/point_cloud"/>                  # Input cloud 1
    <remap from="cloud2" to="$(arg camera_3)/point_cloud"/>                  # Input cloud 2
    <remap from="cloud3" to="$(arg camera_4)/point_cloud"/>                  # Input cloud 3
    <remap from="cloud4" to="$(arg camera_5)/point_cloud"/>                  # Input cloud 4
    <remap from="cloud5" to="$(arg camera_6)/point_cloud"/>                  # Input cloud 5

    <param name="hz" value = "5.0"/>							# Costmap update rate
    <param name="obstacle_height" value = "0.1"/>				# Absolute value of obstacle height (or hole depth)
    <param name="obstacle_height_negative" value = "-0.08"/>                               # Value of obstacle height (or hole depth)
    <param name="exp_decay" value = "15.0"/>					    # Obstacle exponential decay (it is counted in cells)
    <remap from="/costmap_node/costmap" to="/test_costmap"/>
    <param name="width" value="2.5"/>
    <param name="height" value="5.0"/>
    <param name="tilt_compensate" value="$(arg tilt_compensate)"/>
    <param name="consider_sign" value="$(arg consider_sign)"/>
    <remap from="imu" to="/arduimu_v3/imu"/>
    <param name="robot_height" value="0.7"/>
    <param name="min_radius" value="3.65"/>
    <param name="max_radius" value="1.2"/>
    <param name="inflate_negative" value="0"/>
  </node>

</launch>
